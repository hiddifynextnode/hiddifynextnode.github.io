<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifynextnode.github.io/news/article-64567.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>前端开发中需要搞懂的字符编码知识_在线工具</title>
        <meta name="description" content="字符集和字符编码 字符集就是字符的集合，如常见的 ASCII字符集，GB2312字符集，Unicode字符集等。这些不同字符集之间最大的区别是所包含的字符数量的不同。 字符编码则代表字符集的实际编码规" />
        <link rel="icon" href="/assets/website/img/hiddifynextnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HiddifyNextNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hiddifynextnode.github.io/news/article-64567.htm" />
    <meta property="og:site_name" content="HiddifyNextNode免费节点官网" />
    <meta property="og:title" content="前端开发中需要搞懂的字符编码知识_在线工具" />
    <meta property="og:image" content="https://hiddifynextnode.github.io/uploads/20240806/94bcd62f7456c726822fbf66e02d1d8c.webp" />
        <meta property="og:release_date" content="2025-02-28T06:56:24" />
    <meta property="og:updated_time" content="2025-02-28T06:56:24" />
        <meta property="og:description" content="字符集和字符编码 字符集就是字符的集合，如常见的 ASCII字符集，GB2312字符集，Unicode字符集等。这些不同字符集之间最大的区别是所包含的字符数量的不同。 字符编码则代表字符集的实际编码规" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="前端开发中需要搞懂的字符编码知识_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!--/google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,700;1,400;1,600&display=swap" rel="stylesheet">
    <!--//google-fonts -->
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/hiddifynextnode/style-liberty.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FW3J4WPCDW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FW3J4WPCDW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--/Header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light stroke py-lg-0">
                <a class="navbar-brand pe-xl-5 pe-lg-4" href="/">
                                    <span class="sublog">Hiddify Next</span> Node</span>
                                </a>
                <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#navbarScroll" aria-controls="navbarScroll" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarScroll">
                    <ul class="navbar-nav me-lg-auto my-2 my-lg-0 navbar-nav-scroll">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//Header-->
    <!-- breadcrumb -->
    <section class="w3l-about-breadcrumb">
        <div class="breadcrumb-bg breadcrumb-bg-about">
            <div class="container py-lg-5 py-sm-4">
                <div class="w3breadcrumb-gids text-center">
                    <div class="w3breadcrumb-info mt-5">
                        <h1 class="w3ltop-title pt-4">前端开发中需要搞懂的字符编码知识_在线工具</h1>
                        <ul class="breadcrumbs-custom-path">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/"><span class="fas fa-angle-double-right mx-2"></span>  新闻资讯</a></li>
                            <li class="active"><span class="fas fa-angle-double-right mx-2"></span> 正文 </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    
    <!--/tabs-faqs-->
    <section class="w3l-products w3l-faq-block py-5" id="projects">
        <div class="container py-md-5 py-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h2 id="字符集和字符编码">字符集和字符编码</h2> <p>字符集就是字符的集合，如常见的 ASCII字符集，GB2312字符集，Unicode字符集等。这些不同字符集之间最大的区别是所包含的字符数量的不同。</p> <p>字符编码则代表字符集的实际编码规则，是用于计算机解析字符的，如 GB2312，GBK，UTF-8 等。字符编码的本质就是如何使用二进制字节来表示字符的问题。</p> <p>字符集和编码是一对多的关系，同一字符集可能有多种字符编码，如Unicode字符集就有 UTF-8，UTF-16 等。</p> <p>在前端开发中，Javascript程序是使用Unicode字符集，Javascript源码文本通常是基于UTF-8编码。<br /> 但js代码中的字符串类型是UTF-16编码的，这也是为什么会碰到api接口返回字符串在前端出现乱码，因为多数服务都使用utf-8编码，前后编码方式不一致。</p> <p>说起字符集的发展历程，可以总结为一句话：几乎都是对ASCII字符集的扩展。</p> <h2 id="ascii">ASCII</h2> <p>我们知道，计算机是使用二进制来处理信息的。<br /> 其中，每一个二进制位(bit)有 0和1 两种状态。一个字节(byte)则有8个二进制位，可以有256种状态。</p> <p>而ASCII就是基于拉丁字母、主要用于显示英文的一种单字节字符集，它的编码和字符是一一对应的，因为它就是使用一个字节8个二进制位来表示，不会超过256个字符。</p> <p>标准的ASCII字符总计有128个字符(2^7)，其中前面32个控制字符，后面96个是可打印字符，包括常用的大小写字母数字标点符号等。因为只占用了一个字节的后7位，那字节的最高位一般设置为0。</p> <pre><code class="language-js">'a'.charCodeAt() // 97 'A'.charCodeAt() // 65 '9'.charCodeAt() // 57 '.'.charCodeAt() // 46 </code></pre> <p>如上，每个字符会对应一个编码(使用数字标识)，总共会从0-128。完整的ASCII码表，网上很容易找到。</p> <p>通过ASCII码表，我们发现，小写字母并没有和大写字母挨着排序？这是为了方便大小写之间的转换， A 排在 65(64 + 1) 位，而 a 排在 97(64 + 32 + 1) 位。</p> <pre><code class="language-js">65 ^ 32 = 97 // A ^ 32 = a </code></pre> <h2 id="字符集的发展历史">字符集的发展历史</h2> <p>ASCII是几乎所有字符集的基础。</p> <p>标准的ASCII码最多只能标识128个字符，欧美国家可以很好的使用，但其他国家的字符变多，自然就不够用了。<br /> 这个时候，最高位就开始被惦记上，通过扩展ASCII码的最高位，又能满足用于特殊符号的一些国家的需求，这种就是扩展ASCII码。</p> <p>但是亚非拉更多非拉丁语系的国家，字符成千上万，只能使用新的方式。<br /> 如中文，就又进行了扩展，小于127的字符的意义与标准ASCII码相同，当需要标识汉字时，使用2个字节，每个字节都大于127。这种多字节字符集即GB2312，后续因为不断的扩展，如繁体字和各种符号，甚至少数民族的语言符号等等，又使用了包括GBK等不同字符集。<br /> 因此，很多国家都制定了自己的编码字符集，基本都是在ASCII的基础上进行的。</p> <p>各字符集虽然都能够兼容标准ASCII码，但在使用交流上的不便是显而易见的，乱码也是随处可见。为了解决这种各自为战的问题，Unicode字符集就诞生了。</p> <h2 id="unicode">Unicode</h2> <p>Unicode是国际组织制定的，用于收纳世界上所有文字和符号的字符集方案。<br /> 前128个字符同ASCII一样，进行扩充后，使用数字0-0x10FFFF来映射这些字符，最多可以有1114112个字符。目前仍然只使用了其中的一小部分。<br /> Unicode一般使用两个字节来表示一个字符。</p> <ul> <li>码点<br /> Unicode 规定了每个字符的数字编号，这个编号被称为 码点(code point)。<br /> 码点以 U+hex 的形式表示，U+是代表Unicode的前缀，而 hex 是一个16进制数。取值范围是从 U+0000 到 U+10FFFF。</li> </ul> <p>每个码点对应一个字符，绝大部分的常见字符在最前面的 65536 个字符，范围是 U+0000到U+FFFF。<br /> 一般汉字的码点区间为 U+2E80 - U+9FFF。</p> <ul> <li> <p>字符平面<br /> 目前的Unicode分成了17个编组，也称平面，每个平面有65536个码点。<br /> 第一个平面是基本多语言平面，范围：U+0000 - U+FFFF，多数常见字符都在该区间。<br /> 其他平面则为辅助平面，范围：U+10000 到 U+10FFFF，如我们在网上常见 Emoji 表情。</p> </li> <li> <p>码元<br /> 码元(Code Unit)可以理解为对码点进行编码时的最小基本单元，码元是一个整体。而字符编码的作用就是将Unicode码点转换成码元序列。<br /> Unicode常用的编码方式有 UTF-8 、UTF-16 和 UTF-32，UTF是Unicode TransferFormat的缩写。<br /> UTF-8是8位的单字节码元，UTF-16是16位的双字节码元，UTF-32是32位的四字节码元。</p> </li> </ul> <table> <thead> <tr> <th>编码方式</th> <th>码元</th> <th>编码后字节数</th> </tr> </thead> <tbody> <tr> <td>UTF-8</td> <td>8位</td> <td>1-4字节</td> </tr> <tr> <td>UTF-16</td> <td>16位</td> <td>2字节或者4字节</td> </tr> <tr> <td>UTF-32</td> <td>32位</td> <td>4字节</td> </tr> </tbody> </table> <p>另外，为什么总看到使用十六进制数据来表示如码点等各种数据呢？<br /> 因为，两位的十六进制正好等于一个字节8位，0xff = 0b11111111。</p> <h3 id="utf-8">UTF-8</h3> <p>UTF-8是一种可变长度的字符编码方式。目前是使用 1 到 4 个字节来编码字符。<br /> 是互联网时代应用最广的一种编码方式，前端接触的相对最多。</p> <p>需要注意的是：<strong>汉字一般占3个字节，表情符号一般占4个字节。</strong></p> <p>UTF-8的编码规则：</p> <ul> <li>1个字节的字符，第一位为0，后7位为码点，与ASCII相同。</li> <li>n个字节的字符，第一个字节前面 n 位都是1，n+1位是0，可据此判断有几个字节。后面的几个字节都是 <code>10</code> 为开头2位。<br /> 这里规定的都是前缀，对于字符的码点，需要进行截取后依次放入除前缀外的其他位，所以UTF-8又被称为前缀码。<br /> 格式如表：</li> </ul> <table> <thead> <tr> <th>字节数</th> <th>码点位数</th> <th>码点范围</th> <th>编码方式</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>7</td> <td>U+0000~U+007F</td> <td>0×××××××</td> </tr> <tr> <td>2</td> <td>11</td> <td>U+0080~U+07FF</td> <td>110××××× 10××××××</td> </tr> <tr> <td>3</td> <td>16</td> <td>U+0800~U+FFFF</td> <td>1110×××× 10×××××× 10××××××</td> </tr> <tr> <td>4</td> <td>21</td> <td>U+10000~U+10FFFF</td> <td>11110××× 10×××××× 10×××××× 10××××××</td> </tr> </tbody> </table> <p>通过上表的编码规则，我们就可以进行各种转换了。<br /> 下面我们以一个中文字符的编码转换为例，如汉字 '好'：</p> <blockquote> <p>'好'的Unicode码点：<code>'好'.codePointAt() \\ 22909</code>，结果是22909；<br /> 22909在UTF-8的3字节数的编码区间 U+0800 (2048) ~ U+FFFF (65535)；<br /> 22909的二进制值：101100101111101，有15位；<br /> 而3字节数的编码需要16位，前面补0，根据表中规则分成3组：0101 100101 111101；<br /> 依次填入对应的前缀：11100101 10100101 10111101，得到3个字节；<br /> 将得到的三个字节转成十六进制数据：E5 A5 BD，所以汉字 '好' 的UTF-8就是：E5 A5 BD。</p> </blockquote> <p>我们使用 <code>encodeURI</code> 进行验证————encodeURI函数支持将中文进行 UTF-8 编码：</p> <pre><code class="language-js">encodeURI('好') // '%E5%A5%BD' </code></pre> <p>去除百分号，结果正好一致。</p> <h3 id="utf-16">UTF-16</h3> <p>UTF-16的编码方式：基本平面的字符占用 2 个字节（U+0000到U+FFFF），辅助平面的字符占用 4 个字节（U+010000到U+10FFFF）。<br /> 也就是说，UTF-16的编码长度要么是2个字节要么是4个字节。当为2字节时，则实际上与Unicode相同。</p> <p>并且还有个原则，在Unicode基本多语言平面内，从U+D800到U+DFFF之间的码点区间是不对应字符的。而UTF-16需要利用这块码位来对辅助平面的字符进行编码。<br /> 它的具体规则：</p> <ul> <li>码点小于U+FFFF，基本字符，不需处理，直接使用，占两个字节。</li> <li>否则，拆分成两个码元，四个字节，cp表示码点： <ol> <li>低位——((cp - 65536) / 1024) + 0xD800，值范围是 0xD800~0xDBFF；</li> <li>高位——((cp - 65536) % 1024) + 0xDC00，值范围是 0xDC00~0xDFFF。</li> </ol> </li> </ul> <p>看下面的示例：</p> <blockquote> <ol> <li>汉字 '好'，<code>'好'.codePointAt() // 22909</code>，码点小于U+FFFF，直接进行十六进制转换：579D。</li> <li>表情符号 '????'，<code>'????'.codePointAt() // 128516</code>，码点需要拆分： <ul> <li>低位：<code>Math.floor(((128516 - 65536) / 1024)) + 0xD800 // 55357</code>, 得到 D83D</li> <li>高位：<code>((128516 - 65536) % 1024) + 0xDC00 // 56836</code>，得到 DE04</li> </ul> </li> </ol> </blockquote> <p>使用 <code>String.fromCharCode</code> 方法进行验证：</p> <pre><code class="language-js">String.fromCharCode(0xD83D, 0xDE04)  // '????' </code></pre> <p>需要明确的一点，Javascript中的字符串是基于UTF-16编码的，大端序字节。</p> <blockquote> <p>UTF-32是定长的编码，每个码位使用四个字节进行编码。优点是和unicode一一对应，缺点是太浪费空间。</p> </blockquote> <h3 id="比较">比较</h3> <p>下面将选取字母、汉字、表情字符，进行编码对比查看：</p> <pre><code class="language-js">// UTF-8 'a': 97 - 0x61 '好': 22909 - (0xE5 0xA5 0xBD) '????'： 128516 - (0xF0 0x9F 0x98 0x84)  // UTF-16 'a': 97 - 0x0061 '好': 22909 - 0x597d '????'： 128516 - (0xD83D, 0xDE04) </code></pre> <p>可以看到，UTF-8是变长1-4个字节，码元为8位；UTF-16是2或4字节，码元是16位。<br /> 这里记住UTF-16的码元，对于我们理解下面的问题，比较有帮助。</p> <h2 id="前端开发中的编码">前端开发中的编码</h2> <p>前面已提到过，javascript中的字符串是基于UTF-16编码的，所以在计算字符串长度时，我们需要先理解UTF-16编码。<br /> 下面看下处理字符串时可能会遇到的问题。</p> <h3 id="字符串长度计算">字符串长度计算</h3> <p>字符串的length属性，实际上是使用UTF-16的码元个数来进行计算的：</p> <ul> <li>ASCII码和大部分中文，都是一个码元</li> <li>而表情字符和其他特殊字符都是两个码元</li> </ul> <p>所以当某个字符中存在2个码元时，就算显示的是一个字符，length却等于2。</p> <pre><code class="language-js">'a'.length // 1 '好'.length // 1，多数汉字都是基本字符平面，只有一个码元，长度就为1。 '????'.length // 2 </code></pre> <h4 id="组合字符的长度">组合字符的长度</h4> <p>还有一种特殊的，组合字符，一般指一些带标点符号的字符：é。</p> <pre><code class="language-js">'é'.length // 2 'e\u0301'.length // 2  // 获取码点时，忽略了标点符号，显示的是字母的码点 'é'.codePointAt() // 101 'e'.codePointAt() // 101 </code></pre> <p>如要正常操作组合字符，使用normalize()。</p> <pre><code class="language-js">'é'.normalize().length = 1。 </code></pre> <h3 id="多码元字符操作">多码元字符操作</h3> <p>对于多码元字符使用下标取值时，得到的将是它的码元：</p> <pre><code class="language-js">'????'[0] // '\uD83D' '????'[1] // '\uDE04' '123'[0] // '1' </code></pre> <p>循环时，使用 for 会乱码，而 for-of 则正常：</p> <pre><code class="language-js">let smile = '????' for(let i = 0; i &lt; smile.length; i++) {    console.log(smile[i])  } // � // �  for (let tt of smile) {   console.log(tt) } // ???? </code></pre> <p>但，可以使用转换成扩展数组的方式访问：</p> <pre><code class="language-js">[...'????'][0] // '????' Array.from('????') // ['????'] </code></pre> <p>还可以使用码点的方式：</p> <pre><code class="language-js">String.fromCodePoint('????'.codePointAt()) // '????' </code></pre> <p>对于这种特殊字符，使用下面的字符串方法都会分割码元：<br /> split()，slice()，charAt()，charCodeAt()，substr()，substring()。</p> <pre><code class="language-js">'????'.slice(0, 2) // '????' '????'.slice(0, 1) // '\uD83D' '????'.slice(1, 2) // '\uDE04' '????'.substr(0,1) // '\uD83D' '????'.substr(0,2) // '????'  '????'.split('') // ['\uD83D', '\uDE04'] </code></pre> <h3 id="正则中的-u-修饰符">正则中的 u 修饰符</h3> <p>ES6在正则中添加了u修饰符，用来正确处理大于\uFFFF的 Unicode 字符。<br /> 也就是能够正确处理四个字节的 UTF-16 编码。</p> <pre><code class="language-js">/^\S$/.test('????') // false /^\S$/u.test('????') // true </code></pre> <p>但对组合字符，u修饰符不起作用：</p> <pre><code class="language-js">/^\S$/u.test('é') // false /^\S$/u.test('e\u0301') // false </code></pre> <h3 id="转义字符">转义字符</h3> <p>我们还需要注意的，是转义字符的计算，结果会以实际字符为准：</p> <pre><code class="language-js">'\x3f'.length // 1 '?'.length // 1 </code></pre> <p>读取操作时，也能正常处理：</p> <pre><code class="language-js">'\x3f'[0] // '?' '\x3f'.split('') // ['?'] </code></pre> <h3 id="常用api">常用API</h3> <p>前端在对Unicode编码处理时，提供了一些可以使用的API，在实际工作中，会方便我们处理这方面的问题。</p> <h4 id="处理码点和字符">处理码点和字符</h4> <ul> <li>charAt(index)<br /> 从一个字符串中返回指定的字符，对于多码元字符，仍会返回码元字符：</li> </ul> <pre><code class="language-js">'a'.charAt() // 'a' '????'.charAt() // '\uD83D' '????'.charAt(1) // '\uDE04' </code></pre> <ul> <li>charCodeAt(index)<br /> 返回0到65535之间的整数码点值。对于多码元如果字符的码点大于U+FFFF，则返回第一个码元值，还可以加索引参数取后面码元的值。</li> <li>codePointAt(pos)<br /> 返回Unicode码点，多码元也能返回完整的码点值。codePointAt可以传入索引参数，对多码元字符取第二个码元值。</li> </ul> <pre><code class="language-js">// 小于 U+FFFF '好'.codePointAt() // 22909 '好'.charCodeAt() // 22909  // 大于 U+FFFF '????'.charCodeAt() // 55357 '????'.charCodeAt(1) // 56836 '????'.codePointAt() // 128516 '????'.codePointAt(1) // 56836 </code></pre> <ul> <li>String.fromCharCode(num1[, ...[, numN]])<br /> 返回由指定的UTF-16码点序列创建的字符串。参数范围0到65535，大于65535的数据将被截断，结果不准确。<br /> 对于多码元字符，则会将两个码元组合得到该字符。</li> <li>String.fromCodePoint(num1[, ...[, numN]])<br /> 返回使用指定的代码点序列创建的字符串。可以处理多码元字符的完整码点值。</li> </ul> <pre><code class="language-js">String.fromCharCode(55357, 56836, 123) // '????{' String.fromCodePoint(128516, 123, 8776) // '????{≈' </code></pre> <h4 id="textencoder">TextEncoder</h4> <p>TextEncoder，使用 UTF-8 编码将代码点流转换成字节流。<br /> TextDecoder：解码。<br /> 默认编码方式就是UTF-8，可以解决字符转UTF-8编码的问题。</p> <pre><code class="language-js">const txtEn = new TextEncoder() const enVal = txtEn.encode('好') // Uint8Array(3) [229, 165, 189] const txtDe = new TextDecoder() txtDe.decode(enVal) // '好' </code></pre> <p>IE不支持。</p> <h4 id="stringprototypenormalize">String.prototype.normalize()</h4> <p>对于语调符号和重音符号，Unicode提供了两种方法，一种是直接提供带符号的字符，如 <code>é</code> (码点233)；另一种是组合字符，如上文提到的 <code>é</code> (码点101)。<br /> 针对这种码点不同，但实质一样的字符，Javascript识别不了：</p> <pre><code class="language-js">'é' === 'é' // false </code></pre> <p>而 normalize() 方法的引入，正是为了解决这一问题，它会按照一定的方式将字符的不同表示方法统一为标准形式：</p> <pre><code class="language-js">'é' === 'é'.normalize() // true </code></pre> <h4 id="url的utf8编解码">URL的UTF8编解码</h4> <p>另外，在前端常接触的网页中，URL链接编码也是非常常见的。诸如：<code>'http%3A%2F%2Fbaidu.com%2F%E4%B8%AD%E5%9B%BD'</code>。这里面涉及到的就是关于UTF-8的编码。<br /> 而JavaScript提供了四个URL的编码/解码方法，可以用于将非ASCII码的字符，如中文字符、特殊字符、表情字符等，进行UTF-8的编解码操作：</p> <ul> <li>encodeURI() 和 encodeURIComponent()</li> <li>decodeURI() 和 decodeURIComponent()</li> </ul> <p>他们的短处也很明显，对ASCII字符如英文数字等字符无法处理。<br /> 这里的转换方式：先转为UTF-8的字节码，然后前面加个 <code>%</code> 进行拼接得到编码结果。</p> <pre><code class="language-js">encodeURI('好') // '%E5%A5%BD' decodeURI('%E5%A5%BD') // '好' encodeURIComponent('好') // '%E5%A5%BD' decodeURIComponent('%E5%A5%BD') // '好' encodeURI('hello') // 'hello' encodeURIComponent('hello') // 'hello' encodeURIComponent('????') // '%F0%9F%98%84' </code></pre> <h5 id="encodeuri和encodeuricomponent的区别">encodeURI和encodeURIComponent的区别</h5> <p>这两者的不同之处，在于对部分URL元字符符号的处理上。</p> <blockquote> <p>URL元字符：分号（;），逗号（’,’），斜杠（/），问号（?），冒号（:），at（@），&amp;，等号（=），加号（+），美元符号（$），井号（#）。</p> </blockquote> <p>encodeURIComponent会对这些URL元字符进行编码，但是encodeURI则不会：</p> <pre><code class="language-js">encodeURIComponent(';,/@&amp;=') // '%3B%2C%2F%40%26%3D' encodeURI(';,/@&amp;=') // ';,/@&amp;=' </code></pre> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-63958.htm">宠物领养系统数据库设计（实现宠物领养功能）</a></p>
                                        <p>下一个：<a href="/news/article-64568.htm">质量好的宠物服装（质量好的宠物服装品牌）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-38520.htm" title="附近美甲美睫培训学校哪家好一点（美甲美睫美容学校）">附近美甲美睫培训学校哪家好一点（美甲美睫美容学校）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-today-hiddify-next-node.htm" title="12月16日 | HiddifyNextNode机场节点订阅每天更新18.6M/S免费节点订阅链接">12月16日 | HiddifyNextNode机场节点订阅每天更新18.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-39508.htm" title="国产兽药厂家排名前十强企业（国内兽药厂家）">国产兽药厂家排名前十强企业（国内兽药厂家）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-hiddify-next-github.htm" title="3月1日 | HiddifyNextNode机场节点订阅每天更新20M/S免费节点订阅链接">3月1日 | HiddifyNextNode机场节点订阅每天更新20M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-61551.htm" title="宠物美容师一个月工资大概多少钱（宠物美容师工作时间一般是多少）">宠物美容师一个月工资大概多少钱（宠物美容师工作时间一般是多少）</a></li>
                        <li class="py-2"><a href="/news/article-19242.htm" title="echarts图表实现自适应缩放(vue用法也一致)">echarts图表实现自适应缩放(vue用法也一致)</a></li>
                        <li class="py-2"><a href="/news/article-25684.htm" title="动物疫苗防疫站几点上班时间查询（动物防疫站周六日上班吗）">动物疫苗防疫站几点上班时间查询（动物防疫站周六日上班吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-1-hiddify-next-node.htm" title="12月1日 | HiddifyNextNode机场节点订阅每天更新18.4M/S免费节点订阅链接">12月1日 | HiddifyNextNode机场节点订阅每天更新18.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-hiddify-next-github.htm" title="12月7日 | HiddifyNextNode机场节点订阅每天更新19.3M/S免费节点订阅链接">12月7日 | HiddifyNextNode机场节点订阅每天更新19.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-10-node-share.htm" title="11月10日 | HiddifyNextNode机场节点订阅每天更新20.5M/S免费节点订阅链接">11月10日 | HiddifyNextNode机场节点订阅每天更新20.5M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!--//tabs-faqs-->
    
        <!-- footer -->
    <section class="w3l-footer-29-main">
        <!-- copyright -->
        <section class="w3l-copyright text-center">
            <div class="container">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p class="copy-footer-29">HiddifyNextNode免费节点官网 版权所有 Powered by WordPress</p>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                <span class="fas fa-arrow-up"></span>
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- /move top -->
        </section>
        <!-- //copyright -->
    </section>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/hiddifynextnode/jquery-3.3.1.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextnode/theme-change.js"></script>
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["Creative Agency", "Digital Marketing", "Brand Identity"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <script src="/assets/website/js/frontend/hiddifynextnode/jquery-1.9.1.min.js"></script>
    <!-- faq -->
    <script>
    const items = document.querySelectorAll(".accordion button");

    function toggleAccordion() {
        const itemToggle = this.getAttribute('aria-expanded');

        for (i = 0; i < items.length; i++) {
            items[i].setAttribute('aria-expanded', 'false');
        }

        if (itemToggle == 'false') {
            this.setAttribute('aria-expanded', 'true');
        }
    }

    items.forEach(item => item.addEventListener('click', toggleAccordion));
    </script>
    <!-- //faq -->
    <script src="/assets/website/js/frontend/hiddifynextnode/circles.js"></script>
    <!-- owlcarousel -->
    <script src="/assets/website/js/frontend/hiddifynextnode/owl.carousel.js"></script>
    <!-- script for banner slider-->
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: false,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1
                },
                480: {
                    items: 1
                },
                667: {
                    items: 1
                },
                1000: {
                    items: 1
                }
            }
        })

        $('.owl-carousel .owl-dots, .owl-carousel .owl-nav').hide();
    })
    </script>
    <!-- //script -->
    
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/hiddifynextnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!-- //bootstrap -->
    <script src="/assets/website/js/frontend/hiddifynextnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>
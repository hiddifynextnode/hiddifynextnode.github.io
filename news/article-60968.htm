<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifynextnode.github.io/news/article-60968.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>字符串和输入输出缓冲区</title>
        <meta name="description" content="字符串  字符：在计算机中字符是以整数形式存在的，当需要使用时会根据ASCLL码表中的对应关系来显示相应的符号或图案  0 ‘\0’  48 ‘0’  65 ‘A’  97 ‘a’  串： 一种数据结" />
        <link rel="icon" href="/assets/website/img/hiddifynextnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HiddifyNextNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hiddifynextnode.github.io/news/article-60968.htm" />
    <meta property="og:site_name" content="HiddifyNextNode免费节点官网" />
    <meta property="og:title" content="字符串和输入输出缓冲区" />
    <meta property="og:image" content="https://hiddifynextnode.github.io/uploads/20240806/fb3dcb6d52d37c00d45eef347517f312.webp" />
        <meta property="og:release_date" content="2025-02-22T07:11:19" />
    <meta property="og:updated_time" content="2025-02-22T07:11:19" />
        <meta property="og:description" content="字符串  字符：在计算机中字符是以整数形式存在的，当需要使用时会根据ASCLL码表中的对应关系来显示相应的符号或图案  0 ‘\0’  48 ‘0’  65 ‘A’  97 ‘a’  串： 一种数据结" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="字符串和输入输出缓冲区">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!--/google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,700;1,400;1,600&display=swap" rel="stylesheet">
    <!--//google-fonts -->
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/hiddifynextnode/style-liberty.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FW3J4WPCDW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FW3J4WPCDW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--/Header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light stroke py-lg-0">
                <a class="navbar-brand pe-xl-5 pe-lg-4" href="/">
                                    <span class="sublog">Hiddify Next</span> Node</span>
                                </a>
                <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#navbarScroll" aria-controls="navbarScroll" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarScroll">
                    <ul class="navbar-nav me-lg-auto my-2 my-lg-0 navbar-nav-scroll">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//Header-->
    <!-- breadcrumb -->
    <section class="w3l-about-breadcrumb">
        <div class="breadcrumb-bg breadcrumb-bg-about">
            <div class="container py-lg-5 py-sm-4">
                <div class="w3breadcrumb-gids text-center">
                    <div class="w3breadcrumb-info mt-5">
                        <h1 class="w3ltop-title pt-4">字符串和输入输出缓冲区</h1>
                        <ul class="breadcrumbs-custom-path">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/"><span class="fas fa-angle-double-right mx-2"></span>  新闻资讯</a></li>
                            <li class="active"><span class="fas fa-angle-double-right mx-2"></span> 正文 </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    
    <!--/tabs-faqs-->
    <section class="w3l-products w3l-faq-block py-5" id="projects">
        <div class="container py-md-5 py-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="_0" rel="nofollow"></a>字符串</h2> <p> 字符：在计算机中字符是以整数形式存在的，当需要使用时会根据ASCLL码表中的对应关系来显示相应的符号或图案</p> <p> 0 ‘\0’</p> <p> 48 ‘0’</p> <p> 65 ‘A’</p> <p> 97 ‘a’</p> <p> 串： 一种数据结构，由一组连续的若干个相同类型的数据组成。</p> <p> 末尾有一个结束标志。</p> <p> 对于串行结构的处理都是批量性的，从开头位置直到遇到了结束标志停止。</p> <p> 字符串：由字符组成的串型结构，由’\0’结尾</p> <h3> <a id="_22" rel="nofollow"></a>字符串的输入</h3> <p> scanf %s 地址</p> <p> 缺点：不接收空格</p> <p> char *gets（char *s）</p> <p> 功能：输入字符串，可以接受空格</p> <p> 返回值：链式调用（把一个函数的返回值，作为另一个函数的参数）</p> <p> char *fgets(char *s, int size, FILE *stream);</p> <p> 功能：可以设置输入的字符串的长度为size-1，超出部分不接收，强制在末尾位’\0’预留位置</p> <p>注意：</p> <p> gets(str); 输入字符串时不限制长度，有安全隐患</p> <p> fgets(str，size，stdin); 可以设置只接收size-1个字符（给\0预留位置），如果输入的字符不足 size-1，会把\n一起接收</p> <h3> <a id="_44" rel="nofollow"></a>字符串的输出</h3> <p> int puts(const char *s);</p> <p> 功能：输出一个字符串，会在末尾位置自动添加\n</p> <p> 返回值：成功输出的字符的个数</p> <h3> <a id="_52" rel="nofollow"></a>字符串的存在形式</h3> <p> 字符数组：char arr[10] = { ’ 1 ', ’ 2 ’ , ’ 3 ’ };</p> <p> 由char类型组成的数组</p> <p> 注意：主动为\0，预留位置</p> <p> 使用的是栈内存，数据可以修改</p> <p> 字符串字面值</p> <p> “由双引号包含的若干个字符”，默认末尾加上\0</p> <p> 字符串字面值是以地址形式存在的，储存在代码段，如果强行修改就会产生段错误</p> <p> const char* str = “字符串字面值”</p> <p> sizeof(“strstr”) 输出 字符个数+1；</p> <p> 注意：两个一模一样的字符串字面值在代码中只有一份</p> <p> 一般使用字符串字面值来初始化字符数组</p> <p> 常用方式：</p> <p> 字符串数组[] = “字符串字面值”;</p> <p> char str[20] = “hello world”；</p> <p> 会自动为\0预留位置，而且可以修改值</p> <p> 赋值完后字符串存在两份，一份储存在代码段，另一份在栈内存(这份可以修改)</p> <h2> <a id="_89" rel="nofollow"></a>输出缓冲区</h2> <p> 程序输入的数据并不能立即显示到屏幕上，而是先存储到输出缓冲区内，满足一定条件显示</p> <p> 1、遇到\n立即显示</p> <p> 2、遇到输入语句</p> <p> 3、当输出缓冲区满4K</p> <p> 4、程序结束</p> <p> 5、手动刷新缓冲区 fflush(stdout)</p> <p> 缓冲区机制可以提高数据的读写数据</p> <h2> <a id="_105" rel="nofollow"></a>输入缓冲区</h2> <p> 程序不立即获取屏幕上输入的数据，而是按下回车键时程序才从输入缓冲区获取数据</p> <p> 1、当需要读取整型或者浮点型时，而缓冲区中的数据是字符或字母时,此时读取失败，数据残留在缓冲区中，就有可能影响接下来的数据的读取。</p> <p> 2、fgets可以指定读取size-1个字符，如果有多余的会残留在缓冲区中。</p> <p> 3、当先输入整型、浮点型数据，再输入字符、字符串，前一次会残留一个’\n’，会影响字符、字符串的输入</p> <p> scanf("%c") get(str);</p> <p> 解决方法1：确定缓冲区中有垃圾数据，否则程序会定下来等待一个\n</p> <p> scanf("%*[^\n");</p> <p> scanf("%*c");</p> <p> 解决方法2：把输入缓冲区的当前位置指针移动到末尾</p> <p> stdin -&gt; _IO_read_ptr = stdin -&gt; _IO_read_end;</p> <p> 解决方法3：判断scanf()的返回值</p> <h2> <a id="_129" rel="nofollow"></a>字符串常用操作</h2> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>  <span class="token keyword">int</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//功能：把各种类型的数据输出到字符串str中</span> <span class="token comment">//返回值：字符串str的长度</span> <span class="token keyword">int</span> <span class="token function">sscanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//功能：把字符串str的数据输入到指定变量中</span> <span class="token comment">//返回值：成功读取到的变量的个数</span> </code></pre> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>  <span class="token keyword">int</span> <span class="token function">atoi</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>nptr<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：将字符串转成<span class="token keyword">int</span>类型 <span class="token keyword">long</span> <span class="token function">atol</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>nptr<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：字符串转<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">atoll</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>nptr<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：字符串转longlong <span class="token keyword">double</span> <span class="token function">atof</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>nptr<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：字符串转<span class="token keyword">double</span>  </code></pre> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>  size_t <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：计算字符串的长度，不算<span class="token string">'\0'</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">strcpy</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>dest<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：把str拷贝到dest，相当于给dest赋值 <span class="token operator">=</span>  返回值：dest 链式调用 <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">strncpy</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>dest<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>src<span class="token punctuation">,</span> size_t n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">strcat</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>dest<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：把str追加到dest后面，想当于给dest <span class="token operator">+</span><span class="token operator">=</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">strncat</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>dest<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>src<span class="token punctuation">,</span> size_t n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> <span class="token function">strcmp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s1<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：比较两个字符串，根据字典序，谁在前面谁小 返回值：s1 <span class="token operator">&gt;</span> s2	正数 		s1 <span class="token operator">=</span> s2    <span class="token number">0</span> 		s1 <span class="token operator">&lt;</span> s2    负数   <span class="token keyword">int</span> <span class="token function">strncmp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s1<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s2<span class="token punctuation">,</span> size_t n<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：只比较n个字符  <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>haystack<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>needle<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：查找haystack中是否存在needle 返回值：needle第一次在haystack出现的位置，如果找不到返回<span class="token constant">NULL</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">strchr</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：查找s中是否存在字符c 返回值：字符c在s中出现的位置，找不到返回<span class="token constant">NULL</span>  <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">memset</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>s<span class="token punctuation">,</span><span class="token keyword">int</span> c<span class="token punctuation">,</span>size_t n<span class="token punctuation">)</span> 功能：将已开辟内存空间 s 的首 n 个字节的值设为值 c 	   memset可以方便的清空一个结构类型的变量或数组  <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>dest<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>src<span class="token punctuation">,</span> size_t n<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：从src中拷贝n个字节到dest中 <span class="token keyword">int</span> <span class="token function">memcmp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>s1<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>s2<span class="token punctuation">,</span> size_t n<span class="token punctuation">)</span><span class="token punctuation">;</span> 功能：比较两块内存是否相等，按字节比较 返回值： 		s1 <span class="token operator">&gt;</span> s2	 正数 		s1 <span class="token operator">=</span> s2	 <span class="token number">0</span> 		s1 <span class="token operator">&lt;</span> s2  负数  </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-60967.htm">SpringBoot 基本原理</a></p>
                                        <p>下一个：<a href="/news/article-61550.htm">Elasticsearch Mapping 中配置自定义Analyzer</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-19700.htm" title="中国兽药公司排名前十名（中国兽药十强企业排名）">中国兽药公司排名前十名（中国兽药十强企业排名）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-12-hiddify-next-github.htm" title="12月12日 | HiddifyNextNode机场节点订阅每天更新18M/S免费节点订阅链接">12月12日 | HiddifyNextNode机场节点订阅每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-62142.htm" title="成人高考兽医专业可以考兽医资格证吗（成人高考的动物医学专业能参加兽医证）">成人高考兽医专业可以考兽医资格证吗（成人高考的动物医学专业能参加兽医证）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-19-node-share.htm" title="12月19日 | HiddifyNextNode机场节点订阅每天更新21.2M/S免费节点订阅链接">12月19日 | HiddifyNextNode机场节点订阅每天更新21.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-52035.htm" title="哪里可以免费领养宠物猫（哪里能免费领养猫咪）">哪里可以免费领养宠物猫（哪里能免费领养猫咪）</a></li>
                        <li class="py-2"><a href="/news/article-41994.htm" title="Java字符串compareTo()方法示例。">Java字符串compareTo()方法示例。</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-hiddify-next-node-github.htm" title="11月28日 | HiddifyNextNode机场节点订阅每天更新22.3M/S免费节点订阅链接">11月28日 | HiddifyNextNode机场节点订阅每天更新22.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-latest-hiddify-next-node.htm" title="12月18日 | HiddifyNextNode机场节点订阅每天更新20.9M/S免费节点订阅链接">12月18日 | HiddifyNextNode机场节点订阅每天更新20.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-30358.htm" title="动物疫苗接种方法有哪些类型图片（动物疫苗接种技术）">动物疫苗接种方法有哪些类型图片（动物疫苗接种技术）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-23-hiddify-next-node-share.htm" title="11月23日 | HiddifyNextNode机场节点订阅每天更新18.7M/S免费节点订阅链接">11月23日 | HiddifyNextNode机场节点订阅每天更新18.7M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!--//tabs-faqs-->
    
        <!-- footer -->
    <section class="w3l-footer-29-main">
        <!-- copyright -->
        <section class="w3l-copyright text-center">
            <div class="container">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p class="copy-footer-29">HiddifyNextNode免费节点官网 版权所有 Powered by WordPress</p>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                <span class="fas fa-arrow-up"></span>
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- /move top -->
        </section>
        <!-- //copyright -->
    </section>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/hiddifynextnode/jquery-3.3.1.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextnode/theme-change.js"></script>
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["Creative Agency", "Digital Marketing", "Brand Identity"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <script src="/assets/website/js/frontend/hiddifynextnode/jquery-1.9.1.min.js"></script>
    <!-- faq -->
    <script>
    const items = document.querySelectorAll(".accordion button");

    function toggleAccordion() {
        const itemToggle = this.getAttribute('aria-expanded');

        for (i = 0; i < items.length; i++) {
            items[i].setAttribute('aria-expanded', 'false');
        }

        if (itemToggle == 'false') {
            this.setAttribute('aria-expanded', 'true');
        }
    }

    items.forEach(item => item.addEventListener('click', toggleAccordion));
    </script>
    <!-- //faq -->
    <script src="/assets/website/js/frontend/hiddifynextnode/circles.js"></script>
    <!-- owlcarousel -->
    <script src="/assets/website/js/frontend/hiddifynextnode/owl.carousel.js"></script>
    <!-- script for banner slider-->
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: false,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1
                },
                480: {
                    items: 1
                },
                667: {
                    items: 1
                },
                1000: {
                    items: 1
                }
            }
        })

        $('.owl-carousel .owl-dots, .owl-carousel .owl-nav').hide();
    })
    </script>
    <!-- //script -->
    
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/hiddifynextnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!-- //bootstrap -->
    <script src="/assets/website/js/frontend/hiddifynextnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>